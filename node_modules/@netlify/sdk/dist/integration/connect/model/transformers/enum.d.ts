import { ModelTransformer, ModelTransformerImplementation, ModelTreeContext, ResolvedModelField } from "../transformer.js";
import { Editor } from "../types.js";
import { CoersionField } from "../walker.js";
export declare class EnumTransformer extends ModelTransformer implements ModelTransformerImplementation {
    parseVisitedInputList(input: unknown, field: CoersionField, treeContext: ModelTreeContext): unknown;
    parseVisitedInputSingle(modelValue: unknown, field: CoersionField, treeContext: ModelTreeContext): unknown;
    toCreateDefinition(): null;
    toConnectDefinition(): string;
    toConnectSingleFieldDefinition(modelField: ResolvedModelField): string;
    toConnectListFieldDefinition(modelField: ResolvedModelField): string;
    toCreateListFieldDefinition(field: ResolvedModelField): Editor.FieldList;
    toCreateSingleFieldDefinition(field: ResolvedModelField): Editor.FieldEnum;
    private getEditorEnumOptions;
    toConnectSingleFieldValue(input: unknown): unknown;
    toConnectListFieldValue(input: unknown): unknown;
    toCreateListFieldValue(input: any, field: CoersionField, treeContext: ModelTreeContext): unknown;
    toCreateSingleFieldValue(input: unknown): unknown;
}
//# sourceMappingURL=enum.d.ts.map