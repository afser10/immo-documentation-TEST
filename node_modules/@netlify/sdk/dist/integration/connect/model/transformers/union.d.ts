import { ModelTransformer, ModelTransformerImplementation, ModelTreeContext, ResolvedModelField } from "../transformer.js";
import { CoersionField } from "../walker.js";
import { Editor } from "../types.js";
export declare class UnionTransformer extends ModelTransformer implements ModelTransformerImplementation {
    toConnectDefinition(): string;
    toConnectSingleFieldDefinition(field: ResolvedModelField): string;
    toConnectListFieldDefinition(field: ResolvedModelField): string;
    toCreateDefinition(): null;
    toCreateListFieldDefinition(field: ResolvedModelField): null | Editor.FieldList;
    toCreateSingleFieldDefinition(field: ResolvedModelField): null | Editor.FieldReference | Editor.FieldModel;
    private getUnionEditorProperties;
    parseVisitedInputSingle(visited: any, field: CoersionField, treeContext: ModelTreeContext): unknown;
    parseVisitedInputList(input: unknown, field: CoersionField, treeContext: ModelTreeContext): unknown;
    toConnectSingleFieldValue(input: any, field: CoersionField, treeContext: ModelTreeContext): unknown;
    toConnectListFieldValue(input: any, field: CoersionField, treeContext: ModelTreeContext): unknown;
    toCreateListFieldValue(modelFieldValue: any, field: CoersionField, treeContext: ModelTreeContext): unknown;
    toCreateSingleFieldValue(input: any, field: CoersionField, treeContext: ModelTreeContext): unknown;
    private parseToMemberType;
    private parseInputRawId;
}
//# sourceMappingURL=union.d.ts.map