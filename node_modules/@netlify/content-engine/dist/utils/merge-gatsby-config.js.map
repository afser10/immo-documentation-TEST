{"version":3,"file":"merge-gatsby-config.js","names":["_lodash","_interopRequireDefault","require","_lodash2","howToMerge","byDefault","a","b","siteMetadata","objA","objB","merge","plugins","concat","mapping","mergeGatsbyConfig","allGatsbyConfigKeysWithAValue","uniq","Object","keys","mergedConfig","reduce","config","gatsbyConfigKey","mergeFn","exports"],"sources":["../../src/utils/merge-gatsby-config.ts"],"sourcesContent":["import uniq from \"lodash.uniq\";\nimport merge from \"lodash.merge\";\nimport { Express } from \"express\";\n\nexport interface IPluginEntryWithParentDir {\n  resolve: string;\n  options?: Record<string, unknown>;\n  parentDir: string;\n}\n// TODO export it in index.d.ts\nexport type PluginEntry = string | IPluginEntryWithParentDir;\n\nexport interface IGatsbyConfigInput {\n  siteMetadata?: Record<string, unknown>;\n  plugins?: Array<PluginEntry>;\n  pathPrefix?: string;\n  assetPrefix?: string;\n  polyfill?: boolean;\n  mapping?: Record<string, string>;\n  proxy?: {\n    prefix: string;\n    url: string;\n  };\n  developMiddleware?(app: Express): void;\n  jsxRuntime?: \"classic\" | \"automatic\";\n  jsxImportSource?: string;\n}\n\ntype ConfigKey = keyof IGatsbyConfigInput;\ntype Metadata = IGatsbyConfigInput[\"siteMetadata\"];\ntype Mapping = IGatsbyConfigInput[\"mapping\"];\n\nconst howToMerge = {\n  /**\n   * pick a truthy value by default.\n   * This makes sure that if a single value is defined, that one it used.\n   * We prefer the \"right\" value, because the user's config will be \"on the right\"\n   */\n  byDefault: (a: ConfigKey, b: ConfigKey): ConfigKey => b || a,\n  siteMetadata: (objA: Metadata, objB: Metadata): Metadata =>\n    merge({}, objA, objB),\n  // plugins are concatenated and uniq'd, so we don't get two of the same plugin value\n  plugins: (\n    a: Array<PluginEntry> = [],\n    b: Array<PluginEntry> = [],\n  ): Array<PluginEntry> => a.concat(b),\n  mapping: (objA: Mapping, objB: Mapping): Mapping => merge({}, objA, objB),\n} as const;\n\n/**\n * Defines how a theme object is merged with the user's config\n */\nexport const mergeGatsbyConfig = (\n  a: IGatsbyConfigInput,\n  b: IGatsbyConfigInput,\n): IGatsbyConfigInput => {\n  // a and b are gatsby configs, If they have keys, that means there are values to merge\n  const allGatsbyConfigKeysWithAValue = uniq(\n    Object.keys(a).concat(Object.keys(b)),\n  ) as Array<ConfigKey>;\n\n  // reduce the array of mergable keys into a single gatsby config object\n  const mergedConfig = allGatsbyConfigKeysWithAValue.reduce(\n    (config, gatsbyConfigKey) => {\n      // choose a merge function for the config key if there's one defined,\n      // otherwise use the default value merge function\n      const mergeFn = howToMerge[gatsbyConfigKey] || howToMerge.byDefault;\n      return {\n        ...config,\n        [gatsbyConfigKey]: mergeFn(a[gatsbyConfigKey], b[gatsbyConfigKey]),\n      };\n    },\n    {} as IGatsbyConfigInput,\n  );\n\n  // return the fully merged config\n  return mergedConfig;\n};\n"],"mappings":";;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAF,sBAAA,CAAAC,OAAA;AAQA;;AAuBA,MAAME,UAAU,GAAG;EACjB;AACF;AACA;AACA;AACA;EACEC,SAAS,EAAEA,CAACC,CAAY,EAAEC,CAAY,KAAgBA,CAAC,IAAID,CAAC;EAC5DE,YAAY,EAAEA,CAACC,IAAc,EAAEC,IAAc,KAC3C,IAAAC,gBAAK,EAAC,CAAC,CAAC,EAAEF,IAAI,EAAEC,IAAI,CAAC;EACvB;EACAE,OAAO,EAAEA,CACPN,CAAqB,GAAG,EAAE,EAC1BC,CAAqB,GAAG,EAAE,KACHD,CAAC,CAACO,MAAM,CAACN,CAAC,CAAC;EACpCO,OAAO,EAAEA,CAACL,IAAa,EAAEC,IAAa,KAAc,IAAAC,gBAAK,EAAC,CAAC,CAAC,EAAEF,IAAI,EAAEC,IAAI;AAC1E,CAAU;;AAEV;AACA;AACA;AACO,MAAMK,iBAAiB,GAAGA,CAC/BT,CAAqB,EACrBC,CAAqB,KACE;EACvB;EACA,MAAMS,6BAA6B,GAAG,IAAAC,eAAI,EACxCC,MAAM,CAACC,IAAI,CAACb,CAAC,CAAC,CAACO,MAAM,CAACK,MAAM,CAACC,IAAI,CAACZ,CAAC,CAAC,CACtC,CAAqB;;EAErB;EACA,MAAMa,YAAY,GAAGJ,6BAA6B,CAACK,MAAM,CACvD,CAACC,MAAM,EAAEC,eAAe,KAAK;IAC3B;IACA;IACA,MAAMC,OAAO,GAAGpB,UAAU,CAACmB,eAAe,CAAC,IAAInB,UAAU,CAACC,SAAS;IACnE,OAAO;MACL,GAAGiB,MAAM;MACT,CAACC,eAAe,GAAGC,OAAO,CAAClB,CAAC,CAACiB,eAAe,CAAC,EAAEhB,CAAC,CAACgB,eAAe,CAAC;IACnE,CAAC;EACH,CAAC,EACD,CAAC,CACH,CAAC;;EAED;EACA,OAAOH,YAAY;AACrB,CAAC;AAACK,OAAA,CAAAV,iBAAA,GAAAA,iBAAA"}