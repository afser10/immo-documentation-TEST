{"version":3,"file":"api-runner-node.js","names":["_lodash","_interopRequireDefault","require","_lodash2","_lodash3","_chalk","_redux","_memoizee","_reporter","_stackTrace","_codeFrame","_fsExtra","_getCache","_createNodeId","_coreUtils","_typeBuilders","_redux2","_datastore","_nodes","_importGatsbyPlugin","_stackTraceUtils","_apiRunnerErrorParser","_detectNodeMutations","_reportOnce","bindActionCreators","memoize","origBindActionCreators","tracer","globalTracer","createContentDigest","node","_node$internal","internal","type","_createContentDigest","contentDigest","undefined","owner","fieldOwners","ignoreType","counter","fields","nodeMutationsWrappers","getNode","id","wrapNode","getNodes","wrapNodes","getNodesByType","getNodeAndSavePathDependency","boundPluginActionCreators","doubleBind","boundActionCreators","api","plugin","actionOptions","traceId","deferNodeMutation","defer","actionKey","name","keys","Object","doubleBoundActionCreators","i","length","key","boundActionCreator","args","reportOnce","initAPICallTracing","parentSpan","startSpan","spanName","spanArgs","defaultSpanArgs","childOf","merge","deferredAction","Promise","resolve","emitter","emit","payload","NODE_MUTATION_ACTIONS","deferActions","actions","deferred","forEach","action","getLocalReporter","activity","reporter","panicOnBuild","bind","getErrorMapWithPluginName","pluginName","errorMap","entries","reduce","memo","val","extendLocalReporterToCatchPluginErrors","runningActivities","setErrorMap","error","panic","errorMeta","activityTimer","text","activityArgs","apply","originalStart","start","originalEnd","end","add","delete","createProgress","total","originalDone","done","getUninitializedCache","message","get","Error","set","del","availableActionsCache","Map","runAPI","gatsbyNode","importGatsbyPlugin","spanOptions","pluginSpan","setTag","publicActions","restrictedActionsAvailableInAPI","availableActions","has","store","dispatch","namespacedCreateNodeId","createNodeId","tracing","cache","getCache","apiFinished","alreadyDisplayed","createPageAction","createPage","warning","stripIndent","chalk","bold","possiblyCodeFrame","getNonGatsbyCodeFrameFormatted","push","warn","join","localReporter","Set","extendedLocalReporter","endInProgressActivitiesCreatedByThisRun","shouldDetectNodeMutations","includes","apiCallArgs","loadNodeContent","schema","buildObjectType","buildUnionType","buildInterfaceType","buildInputObjectType","buildEnumType","buildScalarType","pluginOptions","reject","cb","err","finish","e","apisRunningById","apisRunningByTraceId","waitingForCasacadeToFinish","apiRunnerNode","pluginSource","plugins","getState","flattenedPlugins","implementingPlugins","filter","nodeAPIs","rejectApiRunnerNode","_traceTags$forEach","traceTags","waitForCascadingActions","apiSpanArgs","apiSpan","call","value","apiRunInstance","span","startTime","Date","toJSON","filename","page","path","argsJson","JSON","stringify","omit","size","currentCount","cleanup","results","result","isEmpty","instance","apisByTraceIdCount","runImportedPlugin","shouldOnCreateNode","catch","file","stackTrace","parse","find","test","fileName","codeFrame","structuredError","errorParser","lineNumber","line","columnNumber","column","trimmedFileName","match","code","fs","readFileSync","encoding","codeFrameColumns","highlightCode","_e","location","filePath","context","then","_default","exports","default"],"sources":["../../src/utils/api-runner-node.ts"],"sourcesContent":["import omit from \"lodash.omit\";\nimport isEmpty from \"lodash.isempty\";\nimport merge from \"lodash.merge\";\nimport chalk from \"chalk\";\nimport { bindActionCreators as origBindActionCreators } from \"redux\";\nimport memoize from \"memoizee\";\n\nconst bindActionCreators = memoize(origBindActionCreators);\n\nconst tracer = require(`opentracing`).globalTracer();\nimport reporter from \"../reporter\";\nimport stackTrace from \"stack-trace\";\nimport { codeFrameColumns } from \"@babel/code-frame\";\nimport fs from \"fs-extra\";\nimport { getCache } from \"./get-cache\";\nimport { createNodeId } from \"./create-node-id\";\nimport { createContentDigest as _createContentDigest } from \"../core-utils\";\nimport {\n  buildObjectType,\n  buildUnionType,\n  buildInterfaceType,\n  buildInputObjectType,\n  buildEnumType,\n  buildScalarType,\n} from \"../schema/types/type-builders\";\nimport { emitter, store } from \"../redux\";\nimport { getNodes, getNode, getNodesByType } from \"../datastore\";\nimport { getNodeAndSavePathDependency, loadNodeContent } from \"./nodes\";\nimport { importGatsbyPlugin } from \"./import-gatsby-plugin\";\nimport { getNonGatsbyCodeFrameFormatted } from \"./stack-trace-utils\";\n// import { trackBuildError, decorateEvent } from \"gatsby-telemetry\"\nimport errorParser from \"./api-runner-error-parser\";\nimport { wrapNode, wrapNodes } from \"./detect-node-mutations\";\nimport { reportOnce } from \"./report-once\";\n\n// Override createContentDigest to remove autogenerated data from nodes to\n// ensure consistent digests.\nfunction createContentDigest(node) {\n  if (!node?.internal?.type) {\n    // this doesn't look like a node, so let's just pass it as-is\n    return _createContentDigest(node);\n  }\n  return _createContentDigest({\n    ...node,\n    internal: {\n      ...node.internal,\n      // Remove auto-generated fields that'd prevent\n      // creating a consistent contentDigest.\n      contentDigest: undefined,\n      owner: undefined,\n      fieldOwners: undefined,\n      ignoreType: undefined,\n      counter: undefined,\n    },\n    fields: undefined,\n  });\n}\n\nconst nodeMutationsWrappers = {\n  getNode(id) {\n    return wrapNode(getNode(id));\n  },\n  getNodes() {\n    return wrapNodes(getNodes());\n  },\n  getNodesByType(type) {\n    return wrapNodes(getNodesByType(type));\n  },\n  getNodeAndSavePathDependency(id) {\n    return wrapNode(getNodeAndSavePathDependency(id));\n  },\n};\n\n// Bind action creators per plugin so we can auto-add\n// metadata to actions they create.\nconst boundPluginActionCreators = {};\nconst doubleBind = (boundActionCreators, api, plugin, actionOptions) => {\n  const { traceId, deferNodeMutation } = actionOptions;\n  const defer = deferNodeMutation ? `defer-node-mutation` : ``;\n  const actionKey = plugin.name + api + traceId + defer;\n  if (boundPluginActionCreators[actionKey]) {\n    return boundPluginActionCreators[actionKey];\n  } else {\n    const keys = Object.keys(boundActionCreators);\n    const doubleBoundActionCreators = {};\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const boundActionCreator = boundActionCreators[key];\n      if (typeof boundActionCreator === `function`) {\n        doubleBoundActionCreators[key] = (...args) => {\n          if (args.length === 0) {\n            return boundActionCreator(plugin, actionOptions);\n          }\n          // Let action callers override who the plugin is. Shouldn't be\n          // used that often.\n          else if (args.length === 1) {\n            return boundActionCreator(args[0], plugin, actionOptions);\n          } else if (args.length === 2) {\n            return boundActionCreator(args[0], args[1], actionOptions);\n          }\n\n          reportOnce(\n            `Unhandled redux action: ${key}, in plugin: ${plugin.name}`,\n          );\n\n          return undefined;\n        };\n      }\n    }\n    boundPluginActionCreators[actionKey] = doubleBoundActionCreators;\n    return doubleBoundActionCreators;\n  }\n};\n\nconst initAPICallTracing = (parentSpan) => {\n  const startSpan = (spanName, spanArgs = {}) => {\n    const defaultSpanArgs = { childOf: parentSpan };\n\n    return tracer.startSpan(spanName, merge(defaultSpanArgs, spanArgs));\n  };\n\n  return {\n    tracer,\n    parentSpan,\n    startSpan,\n  };\n};\n\nconst deferredAction =\n  (type) =>\n  (...args) => {\n    // Regular createNode returns a Promise, but when deferred we need\n    // to wrap it in another which we resolve when it's actually called\n    if (type === `createNode`) {\n      return new Promise((resolve) => {\n        emitter.emit(`ENQUEUE_NODE_MUTATION`, {\n          type,\n          payload: args,\n          resolve,\n        });\n      });\n    }\n    return emitter.emit(`ENQUEUE_NODE_MUTATION`, {\n      type,\n      payload: args,\n    });\n  };\n\nconst NODE_MUTATION_ACTIONS = [\n  `createNode`,\n  `deleteNode`,\n  `touchNode`,\n  `createParentChildLink`,\n  `createNodeField`,\n];\n\nconst deferActions = (actions) => {\n  const deferred = { ...actions };\n  NODE_MUTATION_ACTIONS.forEach((action) => {\n    deferred[action] = deferredAction(action);\n  });\n  return deferred;\n};\n\n/**\n * Create a local reporter\n * Used to override reporter methods with activity methods\n */\nfunction getLocalReporter({ activity, reporter }) {\n  // If we have an activity, bind panicOnBuild to the activities method to\n  // join them\n  if (activity) {\n    return { ...reporter, panicOnBuild: activity.panicOnBuild.bind(activity) };\n  }\n\n  return reporter;\n}\n\nfunction getErrorMapWithPluginName(pluginName, errorMap) {\n  const entries = Object.entries(errorMap);\n\n  return entries.reduce((memo, [key, val]) => {\n    memo[`${pluginName}_${key}`] = val;\n\n    return memo;\n  }, {});\n}\n\nfunction extendLocalReporterToCatchPluginErrors({\n  reporter,\n  pluginName,\n  runningActivities,\n}) {\n  let setErrorMap;\n\n  let error = reporter.error;\n  let panic = reporter.panic;\n  let panicOnBuild = reporter.panicOnBuild;\n\n  if (pluginName && reporter?.setErrorMap) {\n    setErrorMap = (errorMap) =>\n      reporter.setErrorMap(getErrorMapWithPluginName(pluginName, errorMap));\n\n    error = (errorMeta, error) => {\n      reporter.error(errorMeta, error, pluginName);\n    };\n\n    panic = (errorMeta, error) => {\n      reporter.panic(errorMeta, error, pluginName);\n    };\n\n    panicOnBuild = (errorMeta, error) => {\n      reporter.panicOnBuild(errorMeta, error, pluginName);\n    };\n  }\n\n  return {\n    ...reporter,\n    setErrorMap,\n    error,\n    panic,\n    panicOnBuild,\n    // If you change arguments here, update reporter.ts as well\n    activityTimer: (text, activityArgs = {}) => {\n      let args = [text, activityArgs];\n\n      if (pluginName && setErrorMap) {\n        args = [...args, pluginName];\n      }\n\n      // eslint-disable-next-line prefer-spread\n      const activity = reporter.activityTimer.apply(reporter, args);\n\n      const originalStart = activity.start;\n      const originalEnd = activity.end;\n\n      activity.start = () => {\n        originalStart.apply(activity);\n        runningActivities.add(activity);\n      };\n\n      activity.end = () => {\n        originalEnd.apply(activity);\n        runningActivities.delete(activity);\n      };\n\n      return activity;\n    },\n    // If you change arguments here, update reporter.ts as well\n    createProgress: (text, total = 0, start = 0, activityArgs = {}) => {\n      let args = [text, total, start, activityArgs];\n\n      if (pluginName && setErrorMap) {\n        args = [...args, pluginName];\n      }\n\n      // eslint-disable-next-line prefer-spread\n      const activity = reporter.createProgress.apply(reporter, args);\n\n      const originalStart = activity.start;\n      const originalEnd = activity.end;\n      const originalDone = activity.done;\n\n      activity.start = () => {\n        originalStart.apply(activity);\n        runningActivities.add(activity);\n      };\n\n      activity.end = () => {\n        originalEnd.apply(activity);\n        runningActivities.delete(activity);\n      };\n\n      activity.done = () => {\n        originalDone.apply(activity);\n        runningActivities.delete(activity);\n      };\n\n      return activity;\n    },\n  };\n}\n\nconst getUninitializedCache = (plugin) => {\n  const message =\n    `Usage of \"cache\" instance in \"onPreInit\" API is not supported as ` +\n    `this API runs before cache initialization` +\n    (plugin && plugin !== `default-site-plugin`\n      ? ` (called in ${plugin})`\n      : ``);\n\n  return {\n    // GatsbyCache\n    async get() {\n      throw new Error(message);\n    },\n    async set() {\n      throw new Error(message);\n    },\n    async del() {\n      throw new Error(message);\n    },\n  };\n};\n\nconst availableActionsCache = new Map();\n\nconst runAPI = async (plugin, api, args, activity) => {\n  const gatsbyNode = await importGatsbyPlugin(plugin, `gatsby-node`);\n\n  if (gatsbyNode[api]) {\n    const parentSpan = args && args.parentSpan;\n    const spanOptions = parentSpan ? { childOf: parentSpan } : {};\n    const pluginSpan = tracer.startSpan(`run-plugin`, spanOptions);\n\n    pluginSpan.setTag(`api`, api);\n    pluginSpan.setTag(`plugin`, plugin.name);\n    const { publicActions, restrictedActionsAvailableInAPI } = require(\n      `../redux/actions`,\n    );\n\n    let availableActions;\n    if (availableActionsCache.has(api)) {\n      availableActions = availableActionsCache.get(api);\n    } else {\n      availableActions = {\n        ...publicActions,\n        ...(restrictedActionsAvailableInAPI[api] || {}),\n      };\n\n      availableActionsCache.set(api, availableActions);\n    }\n\n    let boundActionCreators = bindActionCreators(\n      availableActions,\n      store.dispatch,\n    );\n\n    if (args.deferNodeMutation) {\n      boundActionCreators = deferActions(boundActionCreators);\n    }\n\n    const doubleBoundActionCreators = doubleBind(\n      boundActionCreators,\n      api,\n      plugin,\n      { ...args, parentSpan: pluginSpan, activity },\n    );\n\n    const namespacedCreateNodeId = (id) => createNodeId(id, plugin.name);\n\n    const tracing = initAPICallTracing(pluginSpan);\n\n    // See https://github.com/gatsbyjs/gatsby/issues/11369\n    const cache =\n      api === `onPreInit`\n        ? getUninitializedCache(plugin.name)\n        : getCache(plugin.name);\n\n    // Ideally this would be more abstracted and applied to more situations, but right now\n    // this can be potentially breaking so targeting `createPages` API and `createPage` action\n    let actions = doubleBoundActionCreators;\n    let apiFinished = false;\n    if (api === `createPages`) {\n      let alreadyDisplayed = false;\n      const createPageAction = actions.createPage;\n      // create new actions object with wrapped createPage action\n      // doubleBoundActionCreators is memoized, so we can't just\n      // reassign createPage field as this would cause this extra logic\n      // to be used in subsequent APIs and we only want to target this `createPages` call.\n      actions = {\n        ...actions,\n        createPage: (...args) => {\n          createPageAction(...args);\n          if (apiFinished && !alreadyDisplayed) {\n            const warning = [\n              reporter.stripIndent(`\n              Action ${chalk.bold(\n                `createPage`,\n              )} was called outside of its expected asynchronous lifecycle ${chalk.bold(\n                `createPages`,\n              )} in ${chalk.bold(plugin.name)}.\n              Ensure that you return a Promise from ${chalk.bold(\n                `createPages`,\n              )} and are awaiting any asynchronous method invocations (like ${chalk.bold(\n                `graphql`,\n              )} or http requests).\n              For more info and debugging tips: see ${chalk.bold(\n                `https://gatsby.dev/sync-actions`,\n              )}\n            `),\n            ];\n\n            const possiblyCodeFrame = getNonGatsbyCodeFrameFormatted();\n            if (possiblyCodeFrame) {\n              warning.push(possiblyCodeFrame);\n            }\n\n            reporter.warn(warning.join(`\\n\\n`));\n            alreadyDisplayed = true;\n          }\n        },\n      };\n    }\n\n    const localReporter = getLocalReporter({ activity, reporter });\n\n    const runningActivities = new Set();\n\n    const extendedLocalReporter = extendLocalReporterToCatchPluginErrors({\n      reporter: localReporter,\n      pluginName: plugin.name,\n      runningActivities,\n    });\n\n    const endInProgressActivitiesCreatedByThisRun = () => {\n      // @ts-ignore\n      runningActivities.forEach((activity) => activity.end());\n    };\n\n    const shouldDetectNodeMutations = [\n      `sourceNodes`,\n      `onCreateNode`,\n      `createResolvers`,\n      `createSchemaCustomization`,\n      `setFieldsOnGraphQLNodeType`,\n    ].includes(api);\n\n    const apiCallArgs = [\n      {\n        ...args,\n        parentSpan: pluginSpan,\n        actions,\n        loadNodeContent,\n        store,\n        emitter,\n        getCache,\n        getNodes: shouldDetectNodeMutations\n          ? nodeMutationsWrappers.getNodes\n          : getNodes,\n        getNode: shouldDetectNodeMutations\n          ? nodeMutationsWrappers.getNode\n          : getNode,\n        getNodesByType: shouldDetectNodeMutations\n          ? nodeMutationsWrappers.getNodesByType\n          : getNodesByType,\n        reporter: extendedLocalReporter,\n        getNodeAndSavePathDependency: shouldDetectNodeMutations\n          ? nodeMutationsWrappers.getNodeAndSavePathDependency\n          : getNodeAndSavePathDependency,\n        cache,\n        createNodeId: namespacedCreateNodeId,\n        createContentDigest,\n        tracing,\n        schema: {\n          buildObjectType,\n          buildUnionType,\n          buildInterfaceType,\n          buildInputObjectType,\n          buildEnumType,\n          buildScalarType,\n        },\n      },\n      plugin.pluginOptions,\n    ];\n\n    // If the plugin is using a callback use that otherwise\n    // expect a Promise to be returned.\n    if (gatsbyNode[api].length === 3) {\n      return new Promise((resolve, reject) => {\n        const cb = (err, val) => {\n          pluginSpan.finish();\n          apiFinished = true;\n          endInProgressActivitiesCreatedByThisRun();\n          if (err) {\n            reject(err);\n          } else {\n            resolve(val);\n          }\n        };\n\n        try {\n          gatsbyNode[api](...apiCallArgs, cb);\n        } catch (e) {\n          // trackBuildError(api, {\n          //   error: e,\n          //   pluginName: `${plugin.name}@${plugin.version}`,\n          // })\n          reject(e); // Properly reject the promise if an exception occurs\n        }\n      });\n    } else {\n      try {\n        return await gatsbyNode[api](...apiCallArgs);\n      } finally {\n        pluginSpan.finish();\n        apiFinished = true;\n        endInProgressActivitiesCreatedByThisRun();\n      }\n    }\n  }\n\n  return null;\n};\n\nconst apisRunningById = new Map();\nconst apisRunningByTraceId = new Map();\nlet waitingForCasacadeToFinish = [];\n\n// @ts-ignore\nfunction apiRunnerNode(api, args = {}, { pluginSource, activity } = {}) {\n  const plugins = store.getState().flattenedPlugins;\n\n  // Get the list of plugins that implement this API.\n  // Also: Break infinite loops. Sometimes a plugin will implement an API and\n  // call an action which will trigger the same API being called.\n  // `onCreatePage` is the only example right now. In these cases, we should\n  // avoid calling the originating plugin again.\n  let implementingPlugins = plugins.filter(\n    (plugin) => plugin.nodeAPIs.includes(api) && plugin.name !== pluginSource,\n  );\n\n  // @ts-ignore\n  if (api === `sourceNodes` && args.pluginName) {\n    implementingPlugins = implementingPlugins.filter(\n      // @ts-ignore\n      (plugin) => plugin.name === args.pluginName,\n    );\n  }\n\n  // If there's no implementing plugins, return early.\n  if (implementingPlugins.length === 0) {\n    return null;\n  }\n\n  return new Promise((resolve, rejectApiRunnerNode) => {\n    // @ts-ignore\n    const { parentSpan, traceId, traceTags, waitForCascadingActions } = args;\n    const apiSpanArgs = parentSpan ? { childOf: parentSpan } : {};\n    const apiSpan = tracer.startSpan(`run-api`, apiSpanArgs);\n\n    apiSpan.setTag(`api`, api);\n    traceTags?.forEach?.((value, key) => {\n      apiSpan.setTag(key, value);\n    });\n\n    const apiRunInstance = {\n      api,\n      args,\n      pluginSource,\n      resolve,\n      span: apiSpan,\n      startTime: new Date().toJSON(),\n      traceId,\n    };\n\n    // Generate IDs for api runs. Most IDs we generate from the args\n    // but some API calls can have very large argument objects so we\n    // have special ways of generating IDs for those to avoid stringifying\n    // large objects.\n    let id;\n    if (api === `setFieldsOnGraphQLNodeType`) {\n      // @ts-ignore\n      id = `${api}${apiRunInstance.startTime}${args.type.name}${traceId}`;\n    } else if (api === `onCreateNode`) {\n      // @ts-ignore\n      id = `${api}${apiRunInstance.startTime}${args.node.internal.contentDigest}${traceId}`;\n    } else if (api === `preprocessSource`) {\n      // @ts-ignore\n      id = `${api}${apiRunInstance.startTime}${args.filename}${traceId}`;\n    } else if (api === `onCreatePage`) {\n      // @ts-ignore\n      id = `${api}${apiRunInstance.startTime}${args.page.path}${traceId}`;\n    } else {\n      // When tracing is turned on, the `args` object will have a\n      // `parentSpan` field that can be quite large. So we omit it\n      // before calling stringify\n      const argsJson = JSON.stringify(omit(args, `parentSpan`));\n      id = `${api}|${apiRunInstance.startTime}|${apiRunInstance.traceId}|${argsJson}`;\n    }\n    // @ts-ignore\n    apiRunInstance.id = id;\n\n    if (waitForCascadingActions) {\n      // @ts-ignore\n      waitingForCasacadeToFinish.push(apiRunInstance);\n    }\n\n    if (apisRunningById.size === 0) {\n      emitter.emit(`API_RUNNING_START`);\n    }\n\n    // @ts-ignore\n    apisRunningById.set(apiRunInstance.id, apiRunInstance);\n    if (apisRunningByTraceId.has(apiRunInstance.traceId)) {\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId);\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount + 1);\n    } else {\n      apisRunningByTraceId.set(apiRunInstance.traceId, 1);\n    }\n\n    function cleanup({\n      apiRunInstance,\n      results,\n      waitForCascadingActions,\n      apiSpan,\n    }) {\n      // Remove runner instance\n      // @ts-ignore\n      apisRunningById.delete(apiRunInstance.id);\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId);\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount - 1);\n\n      if (apisRunningById.size === 0) {\n        emitter.emit(`API_RUNNING_QUEUE_EMPTY`);\n      }\n\n      // Filter empty results\n      // @ts-ignore\n      apiRunInstance.results =\n        results?.filter((result) => !isEmpty(result)) || [];\n\n      // Filter out empty responses and return if the\n      // api caller isn't waiting for cascading actions to finish.\n      if (!waitForCascadingActions) {\n        apiSpan.finish();\n\n        // @ts-ignore\n        resolve(apiRunInstance.results);\n      }\n\n      // Check if any of our waiters are done.\n      waitingForCasacadeToFinish = waitingForCasacadeToFinish.filter(\n        (instance) => {\n          // If none of its trace IDs are running, it's done.\n          // @ts-ignore\n          const apisByTraceIdCount = apisRunningByTraceId.get(instance.traceId);\n          if (apisByTraceIdCount === 0) {\n            // @ts-ignore\n            instance.span.finish();\n            // @ts-ignore\n            instance.resolve(instance.results);\n            return false;\n          } else {\n            return true;\n          }\n        },\n      );\n    }\n\n    const runImportedPlugin = (plugin, gatsbyNode) => {\n      const pluginName =\n        plugin.name === `default-site-plugin` ? `gatsby-node.js` : plugin.name;\n\n      // TODO: rethink createNode API to handle this better\n      if (\n        api === `onCreateNode` &&\n        gatsbyNode?.shouldOnCreateNode && // Don't bail if this api is not exported\n        !gatsbyNode.shouldOnCreateNode(\n          // @ts-ignore\n          { node: args.node },\n          plugin.pluginOptions,\n        )\n      ) {\n        // Do not try to schedule an async event for this node for this plugin\n        return null;\n      }\n\n      return runAPI(\n        plugin,\n        api,\n        { ...args, parentSpan: apiSpan },\n        activity,\n      ).catch((err) => {\n        // decorateEvent(`BUILD_PANIC`, {\n        //   pluginName: `${plugin.name}@${plugin.version}`,\n        // })\n\n        const localReporter = getLocalReporter({ activity, reporter });\n\n        const file = stackTrace\n          .parse(err)\n          // @ts-ignore\n          .find((file) => /gatsby-node/.test(file.fileName));\n\n        let codeFrame = ``;\n        const structuredError = errorParser({ err });\n\n        if (file) {\n          // @ts-ignore\n          const { fileName, lineNumber: line, columnNumber: column } = file;\n          const trimmedFileName = fileName.match(/^(async )?(.*)/)[2];\n\n          try {\n            const code = fs.readFileSync(trimmedFileName, {\n              encoding: `utf-8`,\n            });\n            codeFrame = codeFrameColumns(\n              code,\n              {\n                start: {\n                  line,\n                  column,\n                },\n              },\n              {\n                highlightCode: true,\n              },\n            );\n          } catch (_e) {\n            // sometimes stack trace point to not existing file\n            // particularly when file is transpiled and path actually changes\n            // (like pointing to not existing `src` dir or original typescript file)\n          }\n\n          structuredError.location = {\n            start: { line: line, column: column },\n          };\n          structuredError.filePath = fileName;\n        }\n\n        structuredError.context = {\n          ...structuredError.context,\n          pluginName,\n          api,\n          codeFrame,\n        };\n\n        localReporter.panicOnBuild(structuredError);\n\n        rejectApiRunnerNode(err);\n        throw err;\n      });\n    };\n\n    // iife because I'm removing bluebird and this is an easy Promise.mapSeries\n    (async () => {\n      try {\n        const results: any[] = [];\n\n        for (const plugin of implementingPlugins) {\n          const result = await importGatsbyPlugin(plugin, `gatsby-node`).then(\n            (gatsbyNode) => runImportedPlugin(plugin, gatsbyNode),\n          );\n          results.push(result);\n        }\n\n        cleanup({\n          apiRunInstance,\n          results,\n          waitForCascadingActions,\n          apiSpan,\n        });\n      } catch (e) {\n        cleanup({\n          apiRunInstance,\n          results: [],\n          waitForCascadingActions,\n          apiSpan,\n        });\n\n        rejectApiRunnerNode(e);\n      }\n    })();\n  });\n}\n\nexport default apiRunnerNode;\n"],"mappings":"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"}