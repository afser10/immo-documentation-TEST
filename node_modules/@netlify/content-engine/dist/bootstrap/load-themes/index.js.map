{"version":3,"file":"index.js","names":["_createRequireFromPath","require","path","_interopRequireWildcard","_mergeGatsbyConfig","_lodash","_interopRequireDefault","_lodash2","_preferDefault","_getConfigFile","_resolvePlugin","_reporter","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","resolveTheme","themeSpec","configFileThatDeclaredTheme","isMainConfig","rootDir","themeName","resolve","themeDir","scopedRequire","createRequireFromPath","dirname","e","pathToLocalTheme","join","resolvePlugin","localErr","reporter","panic","nodeResolutionPaths","module","paths","map","p","id","context","configFilePath","configModule","getConfigFile","theme","preferDefault","themeConfig","options","parentDir","processTheme","themesList","plugins","result","spec","themeObj","push","flat","Promise","normalizePluginEntry","plugin","loadThemes","config","themesA","themesAFlat","newConfig","mergeGatsbyConfig","mergedConfig","uniqWith","isEqual","themes"],"sources":["../../../src/bootstrap/load-themes/index.ts"],"sourcesContent":["import { createRequireFromPath } from \"../../core-utils/create-require-from-path\";\nimport * as path from \"path\";\nimport {\n  IGatsbyConfigInput,\n  mergeGatsbyConfig,\n  PluginEntry,\n  IPluginEntryWithParentDir,\n} from \"../../utils/merge-gatsby-config\";\nimport uniqWith from \"lodash.uniqwith\";\nimport isEqual from \"lodash.isequal\";\nimport { preferDefault } from \"../prefer-default\";\nimport { getConfigFile } from \"../get-config-file\";\nimport { resolvePlugin } from \"../load-plugins/resolve-plugin\";\nimport reporter from \"../../reporter\";\n\ninterface IThemeObj {\n  themeName: string;\n  themeConfig: IGatsbyConfigInput;\n  themeDir: string;\n  themeSpec: PluginEntry;\n  parentDir: string;\n  configFilePath?: string;\n}\n\n// get the gatsby-config file for a theme\nconst resolveTheme = async (\n  themeSpec: PluginEntry,\n  configFileThatDeclaredTheme: string | undefined,\n  isMainConfig: boolean = false,\n  rootDir: string,\n): Promise<IThemeObj> => {\n  const themeName =\n    typeof themeSpec === `string` ? themeSpec : themeSpec.resolve;\n  let themeDir;\n  try {\n    const scopedRequire = createRequireFromPath(`${rootDir}/:internal:`);\n    // theme is an node-resolvable module\n    themeDir = path.dirname(scopedRequire.resolve(themeName));\n  } catch (e) {\n    let pathToLocalTheme;\n\n    // only try to look for local theme in main site\n    // local themes nested in other themes is potential source of problems:\n    // because those are not hosted by npm, there is potential for multiple\n    // local themes with same name that do different things and name being\n    // main identifier that Gatsby uses right now, it's safer not to support it for now.\n    if (isMainConfig) {\n      pathToLocalTheme = path.join(rootDir, `plugins`, themeName);\n      // is a local plugin OR it doesn't exist\n      try {\n        const { resolve } = resolvePlugin(themeName, rootDir);\n        themeDir = resolve;\n      } catch (localErr) {\n        reporter.panic(`Failed to resolve ${themeName}`, localErr);\n      }\n    }\n\n    if (!themeDir) {\n      const nodeResolutionPaths = module.paths.map((p) =>\n        path.join(p, themeName),\n      );\n      reporter.panic({\n        id: `10226`,\n        context: {\n          themeName,\n          configFilePath: configFileThatDeclaredTheme,\n          pathToLocalTheme,\n          nodeResolutionPaths,\n        },\n      });\n    }\n  }\n\n  const { configModule, configFilePath } = await getConfigFile(\n    themeDir,\n    `gatsby-config`,\n  );\n  const theme:\n    | IGatsbyConfigInput\n    | ((options?: Record<string, unknown>) => IGatsbyConfigInput) =\n    preferDefault(configModule);\n\n  // if theme is a function, call it with the themeConfig\n  const themeConfig =\n    typeof theme === `function`\n      ? theme(typeof themeSpec === `string` ? {} : themeSpec.options)\n      : theme;\n\n  return {\n    themeName,\n    themeConfig,\n    themeSpec,\n    themeDir,\n    parentDir: rootDir,\n    configFilePath,\n  };\n};\n\n// single iteration of a recursive function that resolve parent themes\n// It's recursive because we support child themes declaring parents and\n// have to resolve all the way `up the tree` of parent/children relationships\n//\n// Theoretically, there could be an infinite loop here but in practice there is\n// no use case for a loop so I expect that to only happen if someone is very\n// off track and creating their own set of themes\nconst processTheme = async (\n  { themeName, themeConfig, themeSpec, themeDir, configFilePath }: IThemeObj,\n  { rootDir }: { rootDir: string },\n): Promise<Array<IThemeObj>> => {\n  const themesList = themeConfig?.plugins;\n\n  // Gatsby themes don't have to specify a gatsby-config.js (they might only use gatsby-node, etc)\n  // in this case they're technically plugins, but we should support it anyway\n  // because we can't guarantee which files theme creators create first\n  if (themeConfig && themesList) {\n    const result: IThemeObj[][] = [];\n\n    // for every parent theme a theme defines, resolve the parent's\n    // gatsby config and return it in order [parentA, parentB, child]\n    for (const spec of themesList) {\n      const themeObj = await resolveTheme(\n        spec,\n        configFilePath,\n        false,\n        themeDir,\n      );\n      result.push(await processTheme(themeObj, { rootDir: themeDir }));\n    }\n\n    const flat = result.flat();\n\n    flat.push({\n      themeName,\n      themeConfig,\n      themeSpec,\n      themeDir,\n      parentDir: rootDir,\n    } satisfies IThemeObj);\n\n    return flat;\n  } else {\n    // if a theme doesn't define additional themes, return the original theme\n    return Promise.resolve([\n      { themeName, themeConfig, themeSpec, themeDir, parentDir: rootDir },\n    ]);\n  }\n};\n\nfunction normalizePluginEntry(\n  plugin: PluginEntry,\n  parentDir: string,\n): IPluginEntryWithParentDir {\n  return {\n    resolve: typeof plugin === `string` ? plugin : plugin.resolve,\n    options: typeof plugin === `string` ? {} : plugin.options || {},\n    parentDir,\n  };\n}\n\nexport async function loadThemes(\n  config: IGatsbyConfigInput,\n  { configFilePath, rootDir }: { configFilePath: string; rootDir: string },\n): Promise<{\n  config: IGatsbyConfigInput;\n  themes: Array<IThemeObj>;\n}> {\n  const themesA: IThemeObj[][] = [];\n\n  for (const plugin of config?.plugins || []) {\n    if (\n      (typeof plugin !== `string` &&\n        plugin?.resolve === `default-site-plugin`) ||\n      plugin === `default-site-plugin`\n    ) {\n      continue;\n    }\n\n    const themeObj = await resolveTheme(plugin, configFilePath, true, rootDir);\n    themesA.push(await processTheme(themeObj, { rootDir }));\n  }\n\n  const themesAFlat = themesA.flat();\n\n  let newConfig = {};\n\n  // map over each theme, adding the theme itself to the plugins\n  // list in the config for the theme. This enables the usage of\n  // gatsby-node, etc in themes.\n  for (const {\n    themeName,\n    themeConfig = {},\n    themeSpec,\n    themeDir,\n    parentDir,\n  } of themesAFlat) {\n    /**\n     * themes resolve to a gatsby-config, so here we merge all of the configs\n     * into a single config, making sure to maintain the order in which\n     * they were defined so that later configs, like the user's site and\n     * children, can override functionality in earlier themes.\n     */\n    newConfig = mergeGatsbyConfig(\n      {\n        ...themeConfig,\n        plugins: [\n          ...(themeConfig.plugins || []).map((plugin) =>\n            normalizePluginEntry(plugin, themeDir),\n          ),\n          // theme plugin is last so it's gatsby-node, etc can override it's declared plugins, like a normal site.\n          {\n            resolve: themeName,\n            options: typeof themeSpec === `string` ? {} : themeSpec.options,\n            parentDir,\n          },\n        ],\n      },\n      newConfig,\n    );\n  }\n\n  const mergedConfig = mergeGatsbyConfig(newConfig, {\n    ...config,\n    plugins: [\n      ...(config.plugins || []).map((plugin) =>\n        normalizePluginEntry(plugin, rootDir),\n      ),\n    ],\n  });\n\n  mergedConfig.plugins = uniqWith(mergedConfig.plugins, isEqual);\n\n  return {\n    config: mergedConfig,\n    themes: themesAFlat,\n  };\n}\n"],"mappings":"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"}