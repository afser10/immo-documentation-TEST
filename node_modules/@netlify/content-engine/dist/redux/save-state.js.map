{"version":3,"file":"save-state.js","names":["report","require","redux","saveInProgress","saveState","startTime","Date","now","err","warn","message","duration","console","error","module","exports"],"sources":["../../src/redux/save-state.js"],"sourcesContent":["const report = require(`../reporter`);\n// const { captureEvent } = require(`gatsby-telemetry`)\nconst redux = require(`./`);\n\nlet saveInProgress = false;\nasync function saveState() {\n  if (saveInProgress) return;\n  saveInProgress = true;\n\n  const startTime = Date.now();\n\n  try {\n    await redux.saveState();\n  } catch (err) {\n    report.warn(`Error persisting state: ${(err && err.message) || err}`);\n  }\n\n  try {\n    const duration = (Date.now() - startTime) / 1000;\n    // captureEvent(`INTERNAL_STATE_PERSISTENCE_DURATION`, {\n    //   name: `Save Internal State`,\n    //   duration: Math.round(duration),\n    // })\n  } catch (err) {\n    console.error(err);\n  }\n\n  saveInProgress = false;\n}\n\nmodule.exports = {\n  saveState,\n};\n"],"mappings":";;AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAE,aAAY,CAAC;AACrC;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAE,IAAG,CAAC;AAE3B,IAAIE,cAAc,GAAG,KAAK;AAC1B,eAAeC,SAASA,CAAA,EAAG;EACzB,IAAID,cAAc,EAAE;EACpBA,cAAc,GAAG,IAAI;EAErB,MAAME,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EAE5B,IAAI;IACF,MAAML,KAAK,CAACE,SAAS,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZR,MAAM,CAACS,IAAI,CAAE,2BAA2BD,GAAG,IAAIA,GAAG,CAACE,OAAO,IAAKF,GAAI,EAAC,CAAC;EACvE;EAEA,IAAI;IACF,MAAMG,QAAQ,GAAG,CAACL,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,SAAS,IAAI,IAAI;IAChD;IACA;IACA;IACA;EACF,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZI,OAAO,CAACC,KAAK,CAACL,GAAG,CAAC;EACpB;EAEAL,cAAc,GAAG,KAAK;AACxB;AAEAW,MAAM,CAACC,OAAO,GAAG;EACfX;AACF,CAAC"}